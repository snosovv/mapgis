/****** MMSTRUCT.H ***********   Lobanova M.A. ******** 01/04/99 ***
******* MMSTRUCT.H ***********   Belenkov O.V. ******** 30/11/06 ***
*                                                                  *
*              Copyright (c) PANORAMA Group 1991-2006              *
*                     All Rights Reserved                          *
*                                                                  *
********************************************************************
*                                                                  *
*                   FOR WINDOWS95 & WINDOWS NT                     *
*                                                                  *
********************************************************************
*                                                                  *
*                                                                  *
*            ПОИСК ОБЪЕКТОВ КАРТЫ ПО НАЗВАНИЮ                      *
*                                                                  *
*******************************************************************/

#if !defined(MMSTRUCT_H)
#define MMSTRUCT_H

typedef struct ARRAYNAME
{
  long int   Code;          // Код семантики для поиска
  long int   Title;         // Признак учета подписей
  long int   Count;         // Количество введенных названий
  char       Name[16][256]; // Массив введенных названий для поиска по имени
}
 ARRAYNAME;

typedef struct MYSEMCHOICE
{
  long int    Code;
  char        Value[256];
  long int    Data;
}
  MYSEMCHOICE;

// Описание структуры параметров для фильтра листов                   25/11/02

typedef  char LISTSNAME[260];   // Имя листа

typedef struct  NAMESARRAY
{
   long int   Size;          // Размер структуры
   long int   Count;         // Количество записей LISTSNAME
   LISTSNAME  Record[1];     // Записи
}
	NAMESARRAY;

//#define IDN_STAFFD                  6703
//#define IDN_SEARCHD                 6704

// Для вызова помощи в диалогах необходимо в структуре TASKPARM
// установить путь к файлу *.hlp,который содержит топики
// с идентификаторами "6703" для фильтра отображаемых объектов
// и "6704" для фильтра поиска объектов карты

// Описание структуры параметров для восстановления параметров поиска объектов.
// Используется для изменения стандартного восстановления параметров поиска
// объектов карты функцией selSetObjectSearchEx(...)

typedef struct RESTOREMODE
{
   long int    Note;          // Переменная для восстановления/запоминания состояния диалога
   long int    VisualSeek;    // Флаг поиска среди видимых на карте объектов.
   long int    MapSeek;       // Флаг поиска по картам.
   long int    RestoreSelect; // Флаг восстановления контекста поиска.
}
   RESTOREMODE;

// Параметры        Значения

// Note             номер активной закладки диалога поиска при старте программы
// VisualSeek
//                  "-1" - стандартно восстановить значение;
//                  "0"  - установить поиск без учета видимости объектов;
//                  "1"  - установить поиск с учетом видимости объектов.
// MapSeek
//                  "-1" - стандартно восстановить значение;
//                  "-2" - установить поиск по всем картам;
//                  "0...n" - установить поиск в карте с указанным номером.
// RestoreSelect
//                  "-1" - стандартно восстановить контекст поиска;
//                  "0"  - использовать текущее состояние контекста поиска.


// Описание структуры параметров для диалога поиска объектов по области.

typedef struct AREASEEKPARM
{
   long int Size;          // Размер структкры.
   long int RestoreSelect; // Флаг восстановления контекста поиска по области.
   long int ToSelectArea;  // Флаг выбора области поиска
   long int VisualSeek;    // Флаг поиска среди видимых на карте объектов.
   long int MapSeek;       // Флаг поиска по картам.
   long int AreaType;      // Тип области поиска: объект/фрагмент карты.
   long int InsideFlag;    // Флаг границ поиска.
   long int FilterFlag;    // Флаг использования фильтра объектов.
   long int AreaAction;    // Порядок поиска объектов карты.
   long int InversionFlag; // Флаг инверсного выделения объектов       26/02/02
   double   Distance;      // Расстояние поиска (в метрах).
}
   AREASEEKPARM;

// Параметры        Значения

// RestoreSelect
//                  "-1" - стандартно восстановить контекст поиска;
//                  "0"  - использовать текущее состояние контекста поиска.
// VisualSeek
//                  "-1" - стандартно восстановить значение;
//                  "0"  - установить поиск без учета видимости объектов;
//                  "1"  - установить поиск с учетом видимости объектов.
// MapSeek
//                  "-1" - стандартно восстановить значение;
//                  "-2" - установить поиск по всем картам;
//                  "0...n" - установить поиск в карте с указанным номером.
// ToSelectArea
//                  "0"  - не выполнять выбор области;
//                  "1"  - выполнять выбор области.
// AreaType
//                  "0"  - область задана фрагментом карты;
//                  "1"  - область задана объектом карты.
// InsideFlag
//                  "0"  - искать объекты вне области;
//                  "1"  - искать объекты, входящие в область хотя бы одной точкой;
//                  "2"  - искать объекты, находящиеся целиком внутри области.
// FilterFlag
//                  "0"  - не использовать фильтр объектов;
//                  "1"  - использовать установленный фильтр объектов.
// AreaAction
//                  "0"  - последовательный поиск по мере запроса объектов;
//                  "1"  - предварительный отбор всех объектов, удовлетворяющих
//                         текущим параметрам поска.
// Distance              - расстояние поиска в метрах.


#endif  // MMSTRUCT_H
