/****** MAPSUPP.H ************** Kruzhkov A.E.   ****** 02/10/02 ***
******* MAPSUPP.H ************** Belenkov O.V.   ****** 18/10/05 ***
*                                                                  *
*              Copyright (c) PANORAMA Group 1991-2005              *
*                      All Rights Reserved                         *
*                                                                  *
********************************************************************
*                                                                  *
*                  FOR  WINDOWS95 & WINDOWS NT                     *
*                                                                  *
********************************************************************
*                                                                  *
*              ОПИСАНИЕ КЛАССА ПРЕОБРАЗОВАНИЯ ДАННЫХ               *
*        ИНТЕРФЕЙС ДЛЯ ПРОГРАММ НА ЯЗЫКАХ C, PASCAL, BASIC         *
*                        GISSUPP.DLL                               * 
*                                                                  *
*******************************************************************/

#ifndef MAPSUPP_H
#define MAPSUPP_H

#ifndef MAPTYPE_H
  #include "maptype.h"   // Описание структур интерфейса MAPAPI
#endif

#ifndef MAPAPI_H
  #include "mapapi.h"
#endif


// ОПИСАНИЕ СТРУКТУРЫ ДЛЯ ПРЕОБРАЗОВАНИЯ МЕТРИЧЕСКИХ ДАННЫХ
typedef struct CHANGEPOINT
{
  DOUBLEPOINT  PointIn1 ; // КООРДИНАТЫ ПЕРВОЙ ТОЧКИ ИСХОДНОЙ КАРТЫ
  DOUBLEPOINT  PointIn2 ; // КООРДИНАТЫ ВТОРОЙ ТОЧКИ ИСХОДНОЙ КАРТЫ
  DOUBLEPOINT  PointOut1; // КООРДИНАТЫ ПЕРВОЙ ТОЧКИ ВЫХОДНОЙ КАРТЫ
  DOUBLEPOINT  PointOut2; // КООРДИНАТЫ ВТОРОЙ ТОЧКИ ВЫХОДНОЙ КАРТЫ

  double       Scale    ; // МАСШТАБНЫЙ КОЭФФИЦИЕНТ  ПРЕОБРАЗОВАНИЯ
  double       Angle    ; // УГОЛ ПОВОРОТА ПРЕОБРАЗОВАНИЯ
  long         Error    ; // РАСШИРЕННОЕ ОПИСАНИЕ ОШИБКМ ПРЕОБРАЗОВАНИЯ
}
  CHANGEPOINT;


// ОПИСАНИЕ СТРУКТУРЫ ДЛЯ НУМЕРАЦИИ ТОЧЕК КОНТУРА
typedef struct DECORATEOBJECTPARM
{
  long ObjectCode;       // Код объекта, проставляемого по точкам (0 - не проставлять)
  long TitleCode;        // Код объекта "подписи нумерации"       (0 - не проставлять)

  long FirstTitleNumber; // Значение первой подписи              (>=1)
  long Subject;          // Номер подобъекта                     (>=0)
                         // (-1 - проставить по объекту и всем подобъектам,
                         //       BeginPoint,EndPoint - игнорируются)
  long BeginPoint;       // Начальная и конечная точки нумерации (>=1)
  long EndPoint;         //  (0 - проставить по всему контуру)

  long ComplexTitle;     // Способ создания подписей нумерации
                         //  (0 - подпись на каждую точку)
                         //  (1 - подпись с подобъектами)
  long Reserve;          // Резерв

  double Distance;       // Расстояние от точки до подписи       (>=1)
                         //  (отношение к высоте шрифта - в условных единицах)
}
  DECORATEOBJECTPARM;


extern "C"
{

 // Преобразование координаты точки из одной системы
 // координат в другую
 // Заполнение структуры CHANGEPOINT для определения угла поворота
 // и масштабного коэффициента при преобразовании из системы в систему
 // При ошибке возвращается ноль

 long int _export WINAPI mapInitChangePoint(CHANGEPOINT * changepoint);

 // Получение координаты точки в новой системе с учетеом поворота и
 // масштабирования
 // При ошибке возвращается ноль

 long int _export WINAPI mapChangePoints(CHANGEPOINT * chahgepoint,
                                         DOUBLEPOINT * point);

 // Нумерация точек объекта obj
 // Создает одну подпись с подобъектами или множество
 // подписей по точкам заданного интервала контура +
 // точечные объекты по точкам заданного интервала контура
 // в карте site
 // При ошибке возвращает 0

 long int _export WINAPI mapNumerationPoints(HMAP map, HSITE site, HOBJ obj,
                                             DECORATEOBJECTPARM* parm);

}       // extern "C"


//-----------------------------------------------------------------
// Структура для создания метафайла с изображением схемы объекта
//-----------------------------------------------------------------
typedef struct OBJECTSCHEME
{
  char* NameTxt;  // Имя входного текстого файла с метрикой объекта
  char* NameWmf;  // Имя выходного метафайла
  long  Width;    // Ширина картинки в мм
  long  Height;   // Высота картинки в мм
  long  Scale;    // Знаменатель масштаба изображения объекта
                  // (вычисляется в gsGetScaleObjectMetricTxtToWmfGetScalePictObject)
  long  Border;   // Флаг наличия рамки (1 - есть, 0 - нет)
  long  Image;    // Тип выделения вершин (0 - не выделять,
                  //  1 - точка,  2 - окружность с точкой)
}
 OBJECTSCHEME;

//-----------------------------------------------------------------
// Стуктура текстового файла с метрикой объекта :
//
//  10               // Число точек
// 6345.35  6456.46  // Координаты объекта в метрах
//-----------------------------------------------------------------
 

extern "C"
{

 // Запросить предполагаемый масштаб схемы объекта
 // Вычисленное значение заносится в поле Scale структуры OBJECTSCHEME
 // При ошибке возвращает ноль

 long int _export WINAPI gsGetScaleObjectMetricTxtToWmf(OBJECTSCHEME* data);


 // Создать метафайл со схемой объекта
 // При ошибке возвращает ноль

 long int _export WINAPI gsObjectMetricTxtToWmf(OBJECTSCHEME* data);

}


#endif  // MAPSUPP_H
